package temperatus.model.pojo;

import javafx.beans.property.SimpleStringProperty;

import javax.persistence.*;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Mission generated by hbm2java
 */
@Entity
@Table(name = "MISSION", schema = "PUBLIC", catalog = "DATABASE", uniqueConstraints = @UniqueConstraint(columnNames = "NAME"))
public class Mission implements java.io.Serializable {

    private int id;
    private Author author;
    private Game game;
    private Project project;
    private Subject subject;
    private SimpleStringProperty name = new SimpleStringProperty();
    private Date dateIni;
    private String observations;
    private Set<Record> records = new HashSet<Record>(0);
    private Set<Formula> formulas = new HashSet<Formula>(0);

    public Mission() {
    }

    public Mission(Author author, Game game, Project project, Subject subject, String name, Date dateIni) {
        this.author = author;
        this.game = game;
        this.project = project;
        this.subject = subject;
        this.name.setValue(name);
        this.dateIni = dateIni;
    }

    public Mission(Author author, Game game, Project project, Subject subject, String name, Date dateIni,
                   String observations) {
        this.author = author;
        this.game = game;
        this.project = project;
        this.subject = subject;
        this.name.setValue(name);
        this.dateIni = dateIni;
        this.observations = observations;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "ID", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.PERSIST)
    @JoinColumn(name = "AUTHOR_ID", nullable = false)
    public Author getAuthor() {
        return this.author;
    }

    public void setAuthor(Author author) {
        this.author = author;
    }

    @ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.PERSIST)
    @JoinColumn(name = "GAME_ID", nullable = false)
    public Game getGame() {
        return this.game;
    }

    public void setGame(Game game) {
        this.game = game;
    }

    @ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.PERSIST)
    @JoinColumn(name = "PROJECT_ID", nullable = false)
    public Project getProject() {
        return this.project;
    }

    public void setProject(Project project) {
        this.project = project;
    }

    @ManyToOne(fetch = FetchType.LAZY, cascade = CascadeType.PERSIST)
    @JoinColumn(name = "SUBJECT_ID", nullable = false)
    public Subject getSubject() {
        return this.subject;
    }

    public void setSubject(Subject subject) {
        this.subject = subject;
    }

    @Column(name = "NAME", unique = true, nullable = false)
    public String getName() {
        return this.name.getValue();
    }

    public void setName(String name) {
        this.name.setValue(name);
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "DATE_INI", nullable = false, length = 8)
    public Date getDateIni() {
        return this.dateIni;
    }

    public void setDateIni(Date dateIni) {
        this.dateIni = dateIni;
    }

    @Column(name = "OBSERVATIONS")
    public String getObservations() {
        return this.observations;
    }

    public void setObservations(String observations) {
        this.observations = observations;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "mission", cascade = CascadeType.ALL)
    public Set<Record> getRecords() {
        return this.records;
    }

    public void setRecords(Set<Record> records) {
        this.records = records;
    }

    @ManyToMany(fetch = FetchType.LAZY)
    @JoinTable(name = "MISSION_FORMULA", schema = "PUBLIC", catalog = "DATABASE", joinColumns = {
            @JoinColumn(name = "MISSION_ID", nullable = false, updatable = false)}, inverseJoinColumns = {
            @JoinColumn(name = "FORMULA_ID", nullable = false, updatable = false)})
    public Set<Formula> getFormulas() {
        return this.formulas;
    }

    public void setFormulas(Set<Formula> formulas) {
        this.formulas = formulas;
    }


    @Override
    public String toString() {
        return getName();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Mission)) return false;

        Mission mission = (Mission) o;

        if (getName() != null ? !getName().equals(mission.getName()) : mission.getName() != null) return false;
        return getDateIni() != null ? getDateIni().equals(mission.getDateIni()) : mission.getDateIni() == null;

    }

    @Override
    public int hashCode() {
        int result = getName() != null ? getName().hashCode() : 0;
        result = 31 * result + (getDateIni() != null ? getDateIni().hashCode() : 0);
        return result;
    }

    @Transient
    public SimpleStringProperty getNameProperty() {
        return name;
    }

}
