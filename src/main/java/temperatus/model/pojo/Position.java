package temperatus.model.pojo;
// Generated 09-feb-2016 22:15:19 by Hibernate Tools 4.3.1.Final

import javafx.beans.property.SimpleStringProperty;

import javax.persistence.*;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Position generated by hbm2java
 */
@Entity
@Table(name = "POSITION", schema = "PUBLIC", catalog = "DATABASE", uniqueConstraints = @UniqueConstraint(columnNames = "PLACE"))
public class Position implements java.io.Serializable {

    private Integer id;
    private SimpleStringProperty place = new SimpleStringProperty();
    private String picture;

    public Position() {
    }

    public Position(String place) {
        this.place.setValue(place);
    }

    public Position(String place, String picture) {
        this.place.setValue(place);
        this.picture = picture;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "ID", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "PLACE", unique = true, nullable = false)
    public String getPlace() {
        return this.place.getValue();
    }

    public void setPlace(String place) {
        this.place.setValue(place);
    }

    @Column(name = "PICTURE")
    public String getPicture() {
        return this.picture;
    }

    public void setPicture(String picture) {
        this.picture = picture;
    }

    @Override
    public String toString() {
        return place.getValue();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Position)) return false;

        Position position = (Position) o;

        return !(getPlace() != null ? !getPlace().equals(position.getPlace()) : position.getPlace() != null);
    }

    @Override
    public int hashCode() {
        return getPlace() != null ? getPlace().hashCode() : 0;
    }

    @Transient
    public SimpleStringProperty getPlaceProperty() {
        return place;
    }

}
