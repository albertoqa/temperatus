package temperatus.model.pojo;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Subject generated by hbm2java
 */
@Entity
@Table(name = "SUBJECT", schema = "PUBLIC", catalog = "DATABASE", uniqueConstraints = @UniqueConstraint(columnNames = "NAME"))
public class Subject implements java.io.Serializable {

    private Integer id;
    private boolean isPerson;
    private String name;
    private Boolean sex;
    private Integer age;
    private Double weight;
    private Double height;
    private String observations;
    private Set<Mission> missions = new HashSet<Mission>(0);

    public Subject() {
    }

    public Subject(boolean isPerson, String name) {
        this.isPerson = isPerson;
        this.name = name;
    }

    public Subject(boolean isPerson, String name, Boolean sex, Integer age, Double weight, Double height,
                   String observations, Set<Mission> missions) {
        this.isPerson = isPerson;
        this.name = name;
        this.sex = sex;
        this.age = age;
        this.weight = weight;
        this.height = height;
        this.observations = observations;
        this.missions = missions;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "ID", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "IS_PERSON", nullable = false)
    public boolean isIsPerson() {
        return this.isPerson;
    }

    public void setIsPerson(boolean isPerson) {
        this.isPerson = isPerson;
    }

    @Column(name = "NAME", unique = true, nullable = false, length = 300)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "SEX")
    public Boolean getSex() {
        return this.sex;
    }

    public void setSex(Boolean sex) {
        this.sex = sex;
    }

    @Column(name = "AGE")
    public Integer getAge() {
        return this.age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Column(name = "WEIGHT", precision = 17, scale = 0)
    public Double getWeight() {
        return this.weight;
    }

    public void setWeight(Double weight) {
        this.weight = weight;
    }

    @Column(name = "HEIGHT", precision = 17, scale = 0)
    public Double getHeight() {
        return this.height;
    }

    public void setHeight(Double height) {
        this.height = height;
    }

    @Column(name = "OBSERVATIONS")
    public String getObservations() {
        return this.observations;
    }

    public void setObservations(String observations) {
        this.observations = observations;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "subject", cascade = CascadeType.ALL)
    public Set<Mission> getMissions() {
        return this.missions;
    }

    public void setMissions(Set<Mission> missions) {
        this.missions = missions;
    }

    @Override
    public String toString() {
        return "Subject{" +
                "name='" + name + '\'' +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Subject subject = (Subject) o;

        if (isPerson != subject.isPerson) return false;
        if (id != null ? !id.equals(subject.id) : subject.id != null) return false;
        if (name != null ? !name.equals(subject.name) : subject.name != null) return false;
        if (sex != null ? !sex.equals(subject.sex) : subject.sex != null) return false;
        if (age != null ? !age.equals(subject.age) : subject.age != null) return false;
        if (weight != null ? !weight.equals(subject.weight) : subject.weight != null) return false;
        if (height != null ? !height.equals(subject.height) : subject.height != null) return false;
        if (observations != null ? !observations.equals(subject.observations) : subject.observations != null)
            return false;
        return !(missions != null ? !missions.equals(subject.missions) : subject.missions != null);

    }

    @Override
    public int hashCode() {
        int result = id != null ? id.hashCode() : 0;
        result = 31 * result + (isPerson ? 1 : 0);
        result = 31 * result + (name != null ? name.hashCode() : 0);
        result = 31 * result + (sex != null ? sex.hashCode() : 0);
        result = 31 * result + (age != null ? age.hashCode() : 0);
        result = 31 * result + (weight != null ? weight.hashCode() : 0);
        result = 31 * result + (height != null ? height.hashCode() : 0);
        result = 31 * result + (observations != null ? observations.hashCode() : 0);
        result = 31 * result + (missions != null ? missions.hashCode() : 0);
        return result;
    }
}
