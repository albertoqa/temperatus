package temperatus.model.pojo;

import javafx.beans.property.SimpleIntegerProperty;
import javafx.beans.property.SimpleStringProperty;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Subject generated by hbm2java
 */
@Entity
@Table(name = "SUBJECT", schema = "PUBLIC", catalog = "DATABASE", uniqueConstraints = @UniqueConstraint(columnNames = "NAME"))
public class Subject implements java.io.Serializable {

    private Integer id;
    private boolean isPerson;
    private String name;
    private Boolean sex;
    private Integer age;
    private Double weight;
    private Double height;
    private String observations;
    private Set<Mission> missions = new HashSet<Mission>(0);

    public Subject() {
    }

    public Subject(boolean isPerson, String name) {
        this.isPerson = isPerson;
        this.name = name;
    }

    public Subject(boolean isPerson, String name, Boolean sex, Integer age, Double weight, Double height,
                   String observations, Set<Mission> missions) {
        this.isPerson = isPerson;
        this.name = name;
        this.sex = sex;
        this.age = age;
        this.weight = weight;
        this.height = height;
        this.observations = observations;
        this.missions = missions;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "ID", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "IS_PERSON", nullable = false)
    public boolean isIsPerson() {
        return this.isPerson;
    }

    public void setIsPerson(boolean isPerson) {
        this.isPerson = isPerson;
    }

    @Column(name = "NAME", unique = true, nullable = false, length = 300)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "SEX")
    public Boolean getSex() {
        return this.sex;
    }

    public void setSex(Boolean sex) {
        this.sex = sex;
    }

    @Column(name = "AGE")
    public Integer getAge() {
        return this.age;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    @Column(name = "WEIGHT", precision = 17, scale = 0)
    public Double getWeight() {
        return this.weight;
    }

    public void setWeight(Double weight) {
        this.weight = weight;
    }

    @Column(name = "HEIGHT", precision = 17, scale = 0)
    public Double getHeight() {
        return this.height;
    }

    public void setHeight(Double height) {
        this.height = height;
    }

    @Column(name = "OBSERVATIONS")
    public String getObservations() {
        return this.observations;
    }

    public void setObservations(String observations) {
        this.observations = observations;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "subject", cascade = CascadeType.ALL)
    public Set<Mission> getMissions() {
        return this.missions;
    }

    public void setMissions(Set<Mission> missions) {
        this.missions = missions;
    }

    @Override
    public String toString() {
        return "Subject{" +
                "name='" + name + '\'' +
                '}';
    }

    @Transient
    public SimpleStringProperty getType() {
        if(this.isIsPerson()) {
            return new SimpleStringProperty("Person");
        } else {
            return new SimpleStringProperty("Object");
        }
    }

    @Transient
    public SimpleStringProperty getNameProperty() {
        return new SimpleStringProperty(getName());
    }

    @Transient
    public SimpleIntegerProperty getAgeProperty() {
        if(getAge() != null) {
            return new SimpleIntegerProperty(getAge());
        } else {
            return new SimpleIntegerProperty(0);
        }
    }

    @Transient
    public SimpleStringProperty getSexProperty() {
        if(getSex() != null) {
            if(getSex()) {
                return new SimpleStringProperty("Male");
            } else {
                return new SimpleStringProperty("Female");
            }
        } else {
            return new SimpleStringProperty();
        }
    }

    @Transient
    public SimpleStringProperty getHeightProperty() {
        if(getHeight() != null) {
            return new SimpleStringProperty(getHeight().toString());
        } else {
            return new SimpleStringProperty();
        }
    }

    @Transient
    public SimpleStringProperty getWeightProperty() {
        if(getWeight() != null) {
            return new SimpleStringProperty(getWeight().toString());
        } else {
            return new SimpleStringProperty();
        }
    }

    @Transient
    public SimpleIntegerProperty getNumberOfMissionsProperty() {
        return new SimpleIntegerProperty(getMissions().size());
    }

}
