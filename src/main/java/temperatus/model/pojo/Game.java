package temperatus.model.pojo;
// Generated 09-feb-2016 22:15:19 by Hibernate Tools 4.3.1.Final

import javafx.beans.binding.StringBinding;
import javafx.beans.property.SimpleIntegerProperty;
import javafx.beans.property.SimpleStringProperty;

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Game generated by hbm2java
 */
@Entity
@Table(name = "GAME", schema = "PUBLIC", catalog = "DATABASE", uniqueConstraints = {@UniqueConstraint(columnNames = "TITLE"), @UniqueConstraint(columnNames = "ID")})
public class Game implements java.io.Serializable {

    private Integer id;
    private SimpleStringProperty title = new SimpleStringProperty();
    private SimpleIntegerProperty numButtons = new SimpleIntegerProperty();
    private String observations;
    private Set<Formula> formulas = new HashSet<Formula>(0);
    private Set<Position> positions = new HashSet<Position>(0);
    private Set<Image> images = new HashSet<Image>(0);

    public Game() {
    }

    public Game(String title, int numButtons) {
        this.title.setValue(title);
        this.numButtons.setValue(numButtons);
    }

    public Game(String title, int numButtons, String observations) {
        this.title.setValue(title);
        this.numButtons.setValue(numButtons);
        this.observations = observations;
    }

    public Game(String title, int numButtons, String observations, Set<Formula> formulas, Set<Position> positions) {
        this.title.setValue(title);
        this.numButtons.setValue(numButtons);
        this.observations = observations;
        this.formulas = formulas;
        this.positions = positions;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "ID", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "TITLE", unique = true, nullable = false)
    public String getTitle() {
        return this.title.getValue();
    }

    public void setTitle(String title) {
        this.title.setValue(title);
    }

    @Column(name = "NUM_BUTTONS", nullable = false)
    public int getNumButtons() {
        return this.numButtons.getValue();
    }

    public void setNumButtons(int numButtons) {
        this.numButtons.setValue(numButtons);
    }

    @Column(name = "OBSERVATIONS")
    public String getObservations() {
        return this.observations;
    }

    public void setObservations(String observations) {
        this.observations = observations;
    }

    @ManyToMany(fetch = FetchType.EAGER, cascade = CascadeType.PERSIST)
    @JoinTable(name = "GAME_FORMULA", schema = "PUBLIC", catalog = "DATABASE", joinColumns = {
            @JoinColumn(name = "GAME_ID", nullable = false, updatable = false)}, inverseJoinColumns = {
            @JoinColumn(name = "FORMULA_ID", nullable = false, updatable = false)})
    public Set<Formula> getFormulas() {
        return this.formulas;
    }

    public void setFormulas(Set<Formula> formulas) {
        this.formulas = formulas;
    }

    @ManyToMany(fetch = FetchType.EAGER, cascade = CascadeType.PERSIST)
    @JoinTable(name = "GAME_POSITION", schema = "PUBLIC", catalog = "DATABASE", joinColumns = {
            @JoinColumn(name = "GAME_ID", nullable = false, updatable = false)}, inverseJoinColumns = {
            @JoinColumn(name = "POSITION_ID", nullable = false, updatable = false)})
    public Set<Position> getPositions() {
        return this.positions;
    }

    public void setPositions(Set<Position> positions) {
        this.positions = positions;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "game", cascade = CascadeType.ALL)
    public Set<Image> getImages() {
        return this.images;
    }

    public void setImages(Set<Image> images) {
        this.images = images;
    }

    @Override
    public String toString() {
        return title.getValue();
    }

    @Transient
    public SimpleStringProperty getTitleProperty() {
        return title;
    }

    @Transient
    public StringBinding getNumberOfButtonsProperty() {
        return numButtons.asString();
    }

    @Transient
    public SimpleStringProperty getNumberOfDefaultPositionsProperty() {
        return new SimpleStringProperty(String.valueOf(getPositions().size()));
    }

    @Transient
    public SimpleStringProperty getNumberOfDefaultFormulasProperty() {
        return new SimpleStringProperty(String.valueOf(getFormulas().size()));
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Game)) return false;

        Game game = (Game) o;

        if (getNumButtons() != game.getNumButtons()) return false;
        return !(getTitle() != null ? !getTitle().equals(game.getTitle()) : game.getTitle() != null);
    }

    @Override
    public int hashCode() {
        int result = getTitle() != null ? getTitle().hashCode() : 0;
        result = 31 * result + getNumButtons();
        return result;
    }
}
