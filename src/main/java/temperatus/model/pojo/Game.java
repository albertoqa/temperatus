package temperatus.model.pojo;
// Generated 09-feb-2016 22:15:19 by Hibernate Tools 4.3.1.Final

import javax.persistence.*;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Game generated by hbm2java
 */
@Entity
@Table(name = "GAME", schema = "PUBLIC", catalog = "DATABASE", uniqueConstraints = @UniqueConstraint(columnNames = "TITLE"))
public class Game implements java.io.Serializable {

    private Integer id;
    private String title;
    private int numButtons;
    private String observations;
    private Set<Formula> formulas = new HashSet<Formula>(0);
    private Set<Position> positions = new HashSet<Position>(0);

    public Game() {
    }

    public Game(String title, int numButtons) {
        this.title = title;
        this.numButtons = numButtons;
    }

    public Game(String title, int numButtons, String observations) {
        this.title = title;
        this.numButtons = numButtons;
        this.observations = observations;
    }

    public Game(String title, int numButtons, String observations, Set<Formula> formulas, Set<Position> positions) {
        this.title = title;
        this.numButtons = numButtons;
        this.observations = observations;
        this.formulas = formulas;
        this.positions = positions;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "ID", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Column(name = "TITLE", unique = true, nullable = false, length = 100)
    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    @Column(name = "NUM_BUTTONS", nullable = false)
    public int getNumButtons() {
        return this.numButtons;
    }

    public void setNumButtons(int numButtons) {
        this.numButtons = numButtons;
    }

    @Column(name = "OBSERVATIONS")
    public String getObservations() {
        return this.observations;
    }

    public void setObservations(String observations) {
        this.observations = observations;
    }

    @ManyToMany(fetch = FetchType.LAZY, cascade = CascadeType.PERSIST)
    @JoinTable(name = "GAME_FORMULA", schema = "PUBLIC", catalog = "DATABASE", joinColumns = {
            @JoinColumn(name = "GAME_ID", nullable = false, updatable = false)}, inverseJoinColumns = {
            @JoinColumn(name = "FORMULA_ID", nullable = false, updatable = false)})
    public Set<Formula> getFormulas() {
        return this.formulas;
    }

    public void setFormulas(Set<Formula> formulas) {
        this.formulas = formulas;
    }

    @ManyToMany(fetch = FetchType.LAZY, cascade = CascadeType.PERSIST)
    @JoinTable(name = "GAME_POSITION", schema = "PUBLIC", catalog = "DATABASE", joinColumns = {
            @JoinColumn(name = "GAME_ID", nullable = false, updatable = false)}, inverseJoinColumns = {
            @JoinColumn(name = "POSITION_ID", nullable = false, updatable = false)})
    public Set<Position> getPositions() {
        return this.positions;
    }

    public void setPositions(Set<Position> positions) {
        this.positions = positions;
    }

    @Override
    public String toString() {
        return "Game{" +
                "numButtons=" + numButtons +
                ", title='" + title + '\'' +
                ", id=" + id +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Game game = (Game) o;

        if (numButtons != game.numButtons) return false;
        if (id != null ? !id.equals(game.id) : game.id != null) return false;
        if (title != null ? !title.equals(game.title) : game.title != null) return false;
        if (observations != null ? !observations.equals(game.observations) : game.observations != null) return false;
        if (formulas != null ? !formulas.equals(game.formulas) : game.formulas != null) return false;
        return !(positions != null ? !positions.equals(game.positions) : game.positions != null);

    }

    @Override
    public int hashCode() {
        int result = id != null ? id.hashCode() : 0;
        result = 31 * result + (title != null ? title.hashCode() : 0);
        result = 31 * result + numButtons;
        result = 31 * result + (observations != null ? observations.hashCode() : 0);
        result = 31 * result + (formulas != null ? formulas.hashCode() : 0);
        result = 31 * result + (positions != null ? positions.hashCode() : 0);
        return result;
    }
}
