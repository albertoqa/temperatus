package temperatus.model.pojo;
// Generated 20-ene-2016 21:22:04 by Hibernate Tools 4.3.1.Final

import javax.persistence.*;
import java.util.Date;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Measurement generated by hbm2java
 */
@Entity
@Table(name = "MEASUREMENT", schema = "PUBLIC", catalog = "DATABASE")
public class Measurement implements java.io.Serializable {

    private Integer id;
    private Date date;
    private Integer data;
    private Integer recordId;

    public Measurement() {
    }

    public Measurement(Date date, Integer data, Integer recordId) {
        this.date = date;
        this.data = data;
        this.recordId = recordId;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)

    @Column(name = "ID", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "DATE", length = 8, nullable = false)
    public Date getDate() {
        return this.date;
    }

    public void setDate(Date date) {
        this.date = date;
    }

    @Column(name = "DATA", nullable = false)
    public Integer getData() {
        return this.data;
    }

    public void setData(Integer data) {
        this.data = data;
    }

    @Column(name = "RECORD_ID", nullable = false)
    public Integer getRecordId() {
        return recordId;
    }

    public void setRecordId(Integer recordId) {
        this.recordId = recordId;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;

        Measurement that = (Measurement) o;

        if (!id.equals(that.id)) return false;
        if (!date.equals(that.date)) return false;
        if (!data.equals(that.data)) return false;
        return recordId.equals(that.recordId);

    }

    @Override
    public int hashCode() {
        int result = id.hashCode();
        result = 31 * result + date.hashCode();
        result = 31 * result + data.hashCode();
        result = 31 * result + recordId.hashCode();
        return result;
    }

    @Override
    public String toString() {
        return "Measurement{" +
                "id=" + id +
                ", date=" + date +
                ", data=" + data +
                ", recordId=" + recordId +
                '}';
    }
}
